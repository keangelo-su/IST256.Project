{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "OK? True\n",
      "HTTP Status Code: 200\n",
      "HTTP Status Code Reason: OK\n"
     ]
    }
   ],
   "source": [
    "!pip install -q requests\n",
    "import requests\n",
    "import json \n",
    "url = 'http://makeup-api.herokuapp.com/api/v1/products.json'\n",
    "response = requests.get(url)\n",
    "print(\"OK?\", response.ok)\n",
    "print(\"HTTP Status Code:\", response.status_code)\n",
    "print(\"HTTP Status Code Reason:\", response.reason)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "colourpop Lippie Pencil ['Vegan', 'cruelty free'] https://cdn.shopify.com/s/files/1/1338/0845/collections/lippie-pencil_grande.jpg?v=1512588769\n"
     ]
    }
   ],
   "source": [
    "makeup = response.json() \n",
    "brand = makeup[0]['brand']\n",
    "name = makeup[0]['name']\n",
    "image = makeup[0]['image_link']\n",
    "tags = makeup[0]['tag_list']\n",
    "print(brand,name,tags,image)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Lippie Pencil ['Vegan', 'cruelty free']\n"
     ]
    }
   ],
   "source": [
    "for product in makeup:    \n",
    "    if product['brand'] == 'colourpop' and product['product_type'] =='lip_liner':  \n",
    "        print(product['name'],product['tag_list'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "OK? True\n",
      "HTTP Status Code: 200\n",
      "HTTP Status Code Reason: OK\n"
     ]
    }
   ],
   "source": [
    "url2 = 'https://skincare-api.herokuapp.com/products.json'\n",
    "response = requests.get(url2)\n",
    "print(\"OK?\", response.ok)\n",
    "print(\"HTTP Status Code:\", response.status_code)\n",
    "print(\"HTTP Status Code Reason:\", response.reason)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "amorepacific age spot brightening pen ['water', 'butylene glycol', 'alcohol', 'dipropylene glycol', 'peg-75', 'glycereth-26', 'ascorbyl glucoside', 'camellia sinensis leaf extract', 'panax ginseng root extract', 'glycyrrhiza glabra (licorice) root extract', 'magnolia obovata bark extract', 'equisetum arvense extract', 'calcium pantetheine sulfonate', 'betaine', 'biosaccharide gum-1', 'carbomer', 'peg-60 hydrogenated castor oil', 'sodium citrate', 'cellulose gum', 'citric acid', 'triethanolamine', 'potassium hydroxide', 'disodium edta', 'methylparaben', 'propylparaben', 'fragrance']\n"
     ]
    }
   ],
   "source": [
    "skincare = response.json()\n",
    "skin_brand = skincare[0]['brand']\n",
    "skin_name = skincare[0]['name']\n",
    "skin_ingredient = skincare[0]['ingredient_list']\n",
    "print(skin_brand,skin_name,skin_ingredient)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age spot brightening pen contains the following ingredients: ['water', 'butylene glycol', 'alcohol', 'dipropylene glycol', 'peg-75', 'glycereth-26', 'ascorbyl glucoside', 'camellia sinensis leaf extract', 'panax ginseng root extract', 'glycyrrhiza glabra (licorice) root extract', 'magnolia obovata bark extract', 'equisetum arvense extract', 'calcium pantetheine sulfonate', 'betaine', 'biosaccharide gum-1', 'carbomer', 'peg-60 hydrogenated castor oil', 'sodium citrate', 'cellulose gum', 'citric acid', 'triethanolamine', 'potassium hydroxide', 'disodium edta', 'methylparaben', 'propylparaben', 'fragrance']\n"
     ]
    }
   ],
   "source": [
    "for product in skincare:\n",
    "    if product['brand'] == 'amorepacific' and product['name'] == 'age spot brightening pen':\n",
    "        print(product['name'],\"contains the following ingredients:\",product['ingredient_list'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
